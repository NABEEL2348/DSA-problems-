#include<stdio.h>
#include<stdlib.h>
#define N 4 
#define M 5
int printdiagonal(int arr[N][M],int n,int m,int row,int col,int ascending)
{
    int len=0;
    int r=row;
    int c=col;
    while(r<n && c<m)
    {
        len++;
        r++;
        c++;
        
    }
    int *diagonal=(int *)malloc(len * sizeof(int));
    r=row;
    c=col;
    int count=0;
    for(int i=0;i<len;i++)
    {
        diagonal[i]=arr[r][c];
        r++;
        c++;
    }
    if(ascending)
    {
    for(int i=0;i<len;i++)
    {
        for(int j=i+1;j<len;j++)
        {
            if(diagonal[i]>diagonal[j])
            {
                int temp=diagonal[i];
                diagonal[i]=diagonal[j];
                diagonal[j]=temp;
            }
        }
    }
    }
    else
    {
        for(int i=0;i<len;i++)
    {
        for(int j=i+1;j<len;j++)
        {
            if(diagonal[i]<=diagonal[j])
            {
                int temp=diagonal[i];
                diagonal[i]=diagonal[j];
                diagonal[j]=temp;
            }
        }
    }
    }
    for(int i=0;i<len;i++)
    {
        printf("%d ",diagonal[i]);
    }
    r=row;
    c=col;
    for(int i=0;i<len;i++)
    {
        arr[r][c]=diagonal[i];
        r++;
        c++;
    }
    
    
    
}
int diagonalsort(int arr[N][M],int n,int m)
{
    for(int i=1;i<n;i++)
    {
        printdiagonal(arr,n,m,i,0,1);
    }
    for(int j=1;j<n;j++)
    {
        printdiagonal(arr,n,m,0,j,0);
    }
}
int main()
{
    int arr[N][M]={
        {3, 6, 3, 8, 2},
        {4, 1, 9, 5, 9},
        {5, 7, 2, 4, 8},
        {8, 3, 1, 7, 6}
    };
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<M;j++)
        {
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
    printf("after sorting\n");
    diagonalsort(arr,N,M);
    printf("\n\n");
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<M;j++)
        {
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
}