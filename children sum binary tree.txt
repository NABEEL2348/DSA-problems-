#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *create(int num)
{
    struct node *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    return newnode;
}
int childrensum(struct node* root)
{
    if(root==NULL || (root->left==NULL && root->right==NULL))
    {
        return 1;
    }
    int leftsum=0,rightsum=0;
    
    if(root->left!=NULL)
    {
        leftsum=root->left->num;
    }
    if(root->right!=NULL)
    {
        rightsum=root->right->num;
    }
    return (root->num==leftsum+rightsum) && childrensum(root->left) && childrensum(root->right);
}
int main()
{
    struct node *root=create(10);
    root->left=create(8);
    root->right=create(2);
    root->left->left=create(3);
    root->left->right=create(5);
    root->right->right=create(2);
    if(childrensum(root))
    {
        printf("it is a childrensum is true");
    }
    else
    {
        printf("it is not a childrensum is true");
    }
}