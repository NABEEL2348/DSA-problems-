#include<stdio.h>
int matrixchainpartition(int *arr,int i,int j,int dp[j+1][j+1])
{
    if(i==j)
    {
        return 0;
    }
    int mini=1e9;
    for(int k=i;k<j;k++)
    {
        int steps=arr[i-1]*arr[k]*arr[j]+matrixchainpartition(arr,i,k,dp)+matrixchainpartition(arr,k+1,j,dp);
        if(mini>steps)
        {
            mini=steps;
        }
    }
    return mini;
}
int main()
{
    int arr[]={40,20,30,10,30};
    int n=sizeof(arr)/sizeof(arr[0]);
    int dp[n+1][n+1];
    printf("%d",matrixchainpartition(arr,1,n-1,dp));
}
