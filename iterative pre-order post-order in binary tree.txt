#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *createnode(int num)
{
    struct node *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    return newnode;
}
void iterativepreorder(struct node *root)
{
    struct node *stack[1000];
    int top=-1;
    stack[++top]=root;
    while(top>=0)
    {
        struct node *current=stack[top--];
        printf("%d ",current->num);
        if(current->right!=NULL) 
        {
            stack[++top]=current->right;
        }
        if(current->left!=NULL) 
        {
            stack[++top]=current->left;
        }
    }
}
void iterativeinorder(struct node *root)
{
    if(root==NULL) 
    {
        return;
    }
    struct node* stack[1000];
    int top=-1;
    struct node *current=root;
    while(current!=NULL || top>=0){
        while(current!=NULL){
            stack[++top]=current;
            current=current->left;
        }
        current = stack[top--];
        printf("%d ",current->num);
        current=current->right;
    }
}
int main()
{
    struct node *root=createnode(1);
    root->left=createnode(2);
    root->right=createnode(3);
    root->left->left=createnode(4);
    root->left->right=createnode(5);
    root->right->left=createnode(6);
    root->right->right=createnode(7);
    printf("iterative pre-order:");
    iterativepreorder(root);
    printf("\n");
    printf("iterative in-order:");
    iterativeinorder(root);
}