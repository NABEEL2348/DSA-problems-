#include<stdio.h>
#include<stdlib.h>
struct node
{
    int num;
    struct node *left,*right;
};
struct node *createnode(struct node *root,int num)
{
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    return newnode;
}
struct node *insert(struct node *root,int num)
{
    if(root==NULL)
    {
        root=createnode(root,num);
    }
    else if(num>root->num)
    {
        root->right=insert(root->right,num);
    }
    else if(num<root->num)
    {
        root->left=insert(root->left,num);
    }
    return root;
}
void inorder(struct node *root)
{
    if(root==NULL)
    {
        return;
    }
    inorder(root->left);
    printf("%d ",root->num);
    inorder(root->right);
}
int findmin(struct node *root)
{
    while(root->left!=NULL)
    {
        root=root->left;
    }
    return root->num;
}
int inordersuccessor(struct node *root,struct node *target)
{
    if(root==NULL)
    {
        return 1;
    }
    int result=0;
    
    while(root!=NULL)
    {
      
        if(target->num<root->num)
        {
            result=root->num;
            root=root->left;
        }
        else if(target->num>root->num)
        {
            root=root->right;
        }
        else
        {
            if(target->right!=NULL)
            {
                result=findmin(target->right);
            }
            break;
            
        
        }
        
        
    }
    printf(" the successor is :%d ",result);
}
int main()
{
    struct node *root=NULL;
    root=insert(root,20);
    root=insert(root,8);
    
    root=insert(root,22);
    root=insert(root,4);
    root=insert(root,12);
    root=insert(root,10);
    root=insert(root,14);
    //inorder(root);
    struct node *target=root->left->left;
    
    inordersuccessor(root,target);
    
    
}