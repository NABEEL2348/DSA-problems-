#include<stdio.h>
#include<stdlib.h>
struct job{
    char id;
    int deadline;
    int profit;
    int slots;
};
int compare(const void *a,const void *b)
{
    return ((struct job *)b)->profit - ((struct job *)a)->profit;
}
int jobscheduling(struct job jobs[],int n)
{
    qsort(jobs,n,sizeof(struct job),compare);
    printf("after sorting ");
    for(int i=0;i<n;i++)
    {
        printf("%d ",jobs[i].profit);
    }
    printf("\n");
    int slots[n];
    for(int i=0;i<n;i++)
    {
        slots[i]=-1;
    }
    for(int i=0;i<n;i++)
    {
        for(int j=jobs[i].deadline - 1;j>=0;j--)
        {
            if(j<n && slots[j]==-1 )
            {
                slots[j]=i;
                printf("%d",i);
                break;
            }
        }
    }
    int totalprofit=0;
    for(int i=0;i<n;i++)
    {
        if(slots[i]!=-1)
        {
            printf("%c",jobs[slots[i]].id);
            totalprofit+=jobs[slots[i]].profit;
           
        }
        
    }
    printf("\n the totalprofit is %d",totalprofit);
}
int main()
{
    struct job jobs[]={
        {'a',2,100},
        {'b',1,19},
        {'c',2,27},
        {'d',1,25},
        {'e',3,15},
    };
    int n=sizeof(jobs)/sizeof(jobs[0]);
    jobscheduling(jobs,n);
}