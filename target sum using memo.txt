#include<stdio.h>
#include<string.h>
#include<stdbool.h>
int partitionequalsubsetsum(int arr[],int n,int target,bool dp[n+1][target+1])
{
    if(target==0)
    {
        return 1;
    }
    if(n==0 && target!=0)
    {
        return 0;
    }
    if(dp[n][target!=-1])
    {
        return dp[n][target];
    }
    bool nottake=partitionequalsubsetsum(arr,n-1,target,dp);
    bool take=false;
    bool maxi=false; 
    if(arr[n-1]<=target)
    {
        take=partitionequalsubsetsum(arr,n-1,target-arr[n-1],dp);
        dp[n][target]=take | nottake;
    }
   
    
    return dp[n][target];
}
int main()
{
    int arr[]={2,4,6,8};
    int n=sizeof(arr)/sizeof(arr[0]);
    int target=0;
    for(int i=0;i<n;i++)
    {
        target+=arr[i];
    }
    
    target=target/2 ;
    bool dp[n+1][target+1];
    
    if(partitionequalsubsetsum(arr,n-1,target,dp)==1 && target%2==0)
    {
        printf("equalsubsetsum");
    }
    else
    {
        printf("not equalsubsetsum");
    }
}