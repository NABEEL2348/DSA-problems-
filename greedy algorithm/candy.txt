//my soltion

#include<stdio.h>
int candy(int *ratings,int n)
{
    int totalcount=0;
    int arr1[n+1];
    for(int i=0;i<n;i++)
    {
        arr1[i]=1;
    }
    for(int i=0;i<n;i++)
    {
        
       
        if(ratings[i]>ratings[i+1]&& i!=n-1)
        {
           
            arr1[i]=arr1[i]+1;
        } 
        else if(i!=0 &&ratings[i]>ratings[i-1])
        {
            arr1[i]=arr1[i-1]+1;
        }
    }
    for(int i=0;i<n;i++)
    {
        totalcount+=arr1[i];
    }
    return totalcount;
}
int main()
{
    int ratings[]={1,2,2};
    int n=sizeof(ratings)/sizeof(ratings[0]);
    printf("%d",candy(ratings,n));
}


//gpt solution


#include<stdio.h>

int candy(int* ratings, int ratingsSize) {
    int totalcount = 0;
    int arr1[ratingsSize];  // Changed n to ratingsSize
    for(int i = 0; i < ratingsSize; i++) {
        arr1[i] = 1;  // Initialize every position with 1
    }
    
    // Left to right pass
    for(int i = 1; i < ratingsSize; i++) {
        if(ratings[i] > ratings[i - 1]) {
            arr1[i] = arr1[i - 1] + 1;
        }
    }
    
    // Right to left pass
    for(int i = ratingsSize - 2; i >= 0; i--) {
        if(ratings[i] > ratings[i + 1] && arr1[i] <= arr1[i + 1]) {
            arr1[i] = arr1[i + 1] + 1;
        }
    }
    
    // Summing up the total count
    for(int i = 0; i < ratingsSize; i++) {
        totalcount += arr1[i];
    }
    
    return totalcount;
}

