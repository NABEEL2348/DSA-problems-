#include<stdio.h>
#include<string.h>
#include<limits.h>
int min(int a,int b)
{
    return (a<b)?a:b;
}
int minimumsumpathinmatrix(int arr[][3],int m,int n,int dp[][10])
{
    if(m==0 && n==0)
    {
        return arr[m][n];
    }
    if(m<0 || n<0)
    {
        return INT_MAX;
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    int top=minimumsumpathinmatrix(arr,m-1,n,dp);
    int left=minimumsumpathinmatrix(arr,m,n-1,dp);
    dp[m][n]=arr[m][n]+min(top,left);
    return dp[m][n];
    
}
int main()
{
    int arr[][3]={{1,3,1},{2,5,1},{4,2,1}};
    int m=3,n=3;
    int dp[10][10];
    memset(dp,-1,sizeof(dp));
    printf("%d",minimumsumpathinmatrix(arr,m,n,dp));
}
