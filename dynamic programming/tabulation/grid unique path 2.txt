int uniquePathsWithObstacles(int** obstacleGrid, int obstacleGridSize, int* obstacleGridColSize) {
    int dp[obstacleGridSize][*obstacleGridColSize];
    if(obstacleGrid[0][0]==1)
    {
        return 0;
    }
    
    
    for(int i=0;i<obstacleGridSize;i++)
    {
        for(int j=0;j<*obstacleGridColSize;j++)
        {
            if(i==0 && j==0)
            {
                dp[i][j]=1;
            }
            else if(obstacleGrid[i][j]==1)
            {
                    dp[i][j]=0;
            }
            else
            {
                int up=0;
                int down=0;
                if(i>0)
                {
                    up=dp[i-1][j];
                }
                else
                {
                    up=0;
                }
                if(j>0)
                {
                    down=dp[i][j-1];
                }
                else
                {
                    down=0;
                }
                dp[i][j]=up+down;
                printf("%d ",dp[i][j]);
            }
        }
    }
    return dp[obstacleGridSize-1][*obstacleGridColSize-1];
}