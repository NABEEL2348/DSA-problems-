int min(int a,int b)
{
    return (a<b)?a:b;
}
int minFallingPathSum(int** matrix, int matrixSize, int* matrixColSize) {
    int dp[matrixSize][matrixSize];
    for(int i=0;i<matrixSize;i++)
    {
        for(int j=0;j<matrixSize;j++)
        {
            if(i==0)
            {
                dp[i][j]=matrix[i][j];
            }
            else
            {
                int temp=0;
                int temp1=dp[i-1][j];
                int temp2=0;
                if(j-1>=0)
                {
                    temp=dp[i-1][j-1];
                }
                else 
                {
                    temp=INT_MAX;
                }
                if(j+1<matrixSize)
                {
                    temp2=dp[i-1][j+1];
                }
                else 
                {
                    temp2=INT_MAX;
                }
                int result=0;
                if(temp!=INT_MAX)
                {
                    result=min(temp,temp1);
                }
                else
                {
                    result=temp1;
                }
                int result1=0;
                if(temp2!=INT_MAX)
                {
                    result1=min(result,temp2);
                }
                else
                {
                    result1=result;
                }

                dp[i][j]=matrix[i][j]+result1;
            }
        }
    }
    int ans=INT_MAX;
    for(int i=0;i<matrixSize;i++)
    {
        ans=min(ans,dp[matrixSize-1][i]);
    }
    return ans;
}