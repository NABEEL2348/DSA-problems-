
using tabulation

int climbStairs(int n) {
    int dp[n+1];
    if(n<=1)
    {
        return 1;
    }
    dp[0]=1;
    dp[1]=1;
    for(int i=2;i<=n;i++)
    {
        dp[i]=dp[i-1]+dp[i-2];
    }
    dp[n];
    return dp[n];
}
using memo


#include <stdio.h>
#include<string.h>

int climbingstars(int n,int *dp)
{
    if(n==0)
    {
        return 1;
    }
    if(n<0)
    {
        return 0;
    }
    
    if(dp[n]!=-1)
    {
        return dp[n];
    }
    int left=climbingstars(n-1,dp);
    int right=climbingstars(n-2,dp);
    dp[n]=left+right;
    return dp[n];
}
int main()
{
    int n=4;
    int dp[n+1];
    memset(dp,-1,sizeof(dp));
    printf("%d",climbingstars(n,dp));
    
    return 0;
}
