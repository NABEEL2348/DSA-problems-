#include<stdio.h>
#include<string.h>
#include<math.h>
#include<limits.h>
int min(int a,int b)
{
    return (a<b)?a:b;
}
int trianglepathsum(int arr[4][4],int m,int n,int top,int dp[4][4])
{
    if(m==top-1)
    {
        return arr[m][n];
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    int down=arr[m][n]+trianglepathsum(arr,m+1,n,top,dp);
    int right=arr[m][n]+trianglepathsum(arr,m+1,n+1,top,dp);
    dp[m][n]=min(down,right);
    return dp[m][n];
}
int main()
{
    int arr[4][4]={
        {2},
        {3,4},
        {6,5,7},
        {4,1,8,3}
        
    };
    int m=sizeof(arr)/sizeof(arr[0]);
    int n=sizeof(arr[0])/sizeof(arr[0][0]);
    int dp[4][4];
    memset(dp,-1,sizeof(dp));
    printf("%d",trianglepathsum(arr,0,0,4,dp));
}
