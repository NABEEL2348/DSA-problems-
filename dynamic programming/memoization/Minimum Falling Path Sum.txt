#include<stdio.h>
#include<string.h>
#include<limits.h>
#include<math.h>
int min(int a,int b,int c)
{
    if(a<b)
    {
        if(a<c)
        {
            return a;
        }
        else
        {
            return c;
        }
    }
    else
    {
        return (b<c)?b:c;
    }
}
int mini(int a,int b)
{
    return (a<b)?a:b;
}
int minimumpathfallingsum(int arr[3][3],int m,int n,int dp[n+1][n+1],int top)
{
    if(n<0 || n>top)
    {
        return INT_MAX;
    }
    if(m==0)
    {
        return dp[m][n];
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    int temp=minimumpathfallingsum(arr,m-1,n-1,dp,top);
    int temp1=minimumpathfallingsum(arr,m-1,n,dp,top);
    int temp2=minimumpathfallingsum(arr,m-1,n+1,dp,top);
    dp[m][n]=arr[m][n]+min(temp,temp1,temp2);

    return dp[m][n];
}
int main()
{
    int arr[3][3]={{2,1,3},{6,5,4},{7,8,9}};
    int n=sizeof(arr)/sizeof(arr[0]);
    int dp[n+1][n+1];
    int result=INT_MAX;
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<n;i++)
    {
        
        result=mini(minimumpathfallingsum(arr,n-1,i,dp,n-1),result)?minimumpathfallingsum(arr,n-1,i,dp,n-1):result;
    }
    printf("%d ",result);
    
}