#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *createnode(int num)
{
    struct node *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    return newnode;
}
void preorder(struct node *root)
{
    if(root!=NULL)
    {
        preorder(root->left);
        printf("%d ",root->num);
        preorder(root->right);
        
    }
}
void postorder(struct node *root)
{
    if(root!=NULL)
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d ",root->num);
    }
}
void inorder(struct node *root)
{
    if(root!=NULL)
    {
        printf("%d ",root->num);
        inorder(root->left);
        inorder(root->right);
    }
}

int main()
{
    struct node *root=createnode(1);
    root->left=createnode(2);
    root->right=createnode(3);
    root->left->left=createnode(4);
    root->left->right=createnode(5);
    root->right->left=createnode(6);
    root->right->right=createnode(7);
    printf("Postorder traversal:");
    postorder(root);
    printf("\n");
    printf("Preorder traversal:");
    preorder(root);
    printf("\n");
    printf("inorder traversal:");
    inorder(root);
    printf("\n");
}