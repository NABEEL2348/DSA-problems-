//predeceesor

#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *insert(struct node *root,int num)
{
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    if(root==NULL)
    {
        root=newnode;
    }
    else
    {
        if(num<root->num)
        {
            root->left=insert(root->left,num);
        }
        else
        {
            root->right=insert(root->right,num);
        }
    }
    return root;
}
int inorderpredessor(struct node *root,int num)
{
    struct node *current=root;
    int ans=0;
    while(current!=NULL)
    {
        if(current->num<num)
        {
            ans=current->num;
            current=current->right;
        }
        else
        {
            
            current=current->left;
        }
    }
    return ans;
}
int main()
{
    struct node *root=NULL;
    root=insert(root,10);
    root=insert(root,20);
    root=insert(root,30);
    root=insert(root,40);
    int num=30;
    printf("%d ",inorderpredessor(root,num));
}

/successor

#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *insert(struct node *root,int num)
{
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    if(root==NULL)
    {
        root=newnode;
    }
    else
    {
        if(num<root->num)
        {
            root->left=insert(root->left,num);
        }
        else
        {
            root->right=insert(root->right,num);
        }
    }
    return root;
}
int inorderpredessor(struct node *root,int num)
{
    struct node *current=root;
    int ans=0;
    while(current!=NULL)
    {
        if(current->num<=num)
        {
            current=current->right;
        }
        else
        {
            ans=current->num;
            current=current->left;
        }
    }
    return ans;
}
int main()
{
    struct node *root=NULL;
    root=insert(root,10);
    root=insert(root,20);
    root=insert(root,30);
    root=insert(root,40);
    int num=30;
    printf("%d ",inorderpredessor(root,num));
}