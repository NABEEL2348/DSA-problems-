#include<stdio.h>
#include<string.h>
#include<math.h>
#include<limits.h>
int minpathsum(int arr[3][3],int m,int n,int dp[3][3])
{
    if(m==0 && n==0)
    {
        return arr[m][n];
    }
    if(m<0 || n<0)
    {
        return INT_MAX;
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    int up=INT_MAX,left=INT_MAX;
    if(m>0)
    {
         up=arr[m][n]+minpathsum(arr,m- 1,n,dp);
    }
    if(n>0)
    {
        left=arr[m][n]+minpathsum(arr,m,n- 1,dp);
    }
    dp[m][n]=fmin(up,left);
    return dp[m][n];
}
int main()
{
    int arr[3][3]={{1,3,1},{1,5,1},{4,2,1}};
    int n=sizeof(arr)/sizeof(arr[0]);
    int m=sizeof(arr[0])/sizeof(arr[0][0]);
    int dp[3][3];
    memset(dp,-1,sizeof(dp));
    
    printf("%d",minpathsum(arr,m-1,n-1,dp));
}
