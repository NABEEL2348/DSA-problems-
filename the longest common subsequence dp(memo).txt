#include<stdio.h>
#include<string.h>
int max(int a,int b)
{
    return (a>b) ? a:b;
    
}
int lcsmemo(char str[],int m,char str1[],int n,int dp[][100])
{
    if(m==0 || n==0)
    {
        return 0;
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    if(str[m-1]==str1[n-1])
    {
        return 1+lcsmemo(str,m-1,str1,n-1,dp);
    }
    else
    {
        return max(lcsmemo(str,m-1,str1,n,dp),lcsmemo(str,m,str1,n-1,dp));
    }
}
int main()
{
    char str[]="ABCBDAB";
    char str1[]="BDCAB";
    int n=strlen(str1);
    int m=strlen(str);
    int dp[100][100];
    memset(dp,-1,sizeof(dp));
    printf("the longest common subsequence %d",lcsmemo(str,m,str1,n,dp));
}