#include<stdio.h>
#include<stdlib.h>
struct node{
    int num;
    struct node *left,*right;
};
struct node *insert(struct node *root,int num)
{
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->left=NULL;
    newnode->right=NULL;
    if(root==NULL)
    {
        root=newnode;
    }
    else
    {
        if(root->num>num)
        {
            root->left=insert(root->left,num);
        }
        else
        {
            root->right=insert(root->right,num);
        }
    }
    return root;
}

int kthsmallest(struct node *root,int k,int count)
{
   if(root==NULL)
   {
       return 0;
   }
   if(count==k)
   {
       return root->num;
   }
   if(root!=NULL)
   {
       kthsmallest(root->left,k,count);
        count++;
       kthsmallest(root->right,k,count);
   }
}
int main()
{
    struct node *root=NULL;
    root=insert(root,10);
    root=insert(root,20);
    root=insert(root,30);
    root=insert(root,40);
    int k=3,count=0;
    printf("%d",kthsmallest(root,k,count));
}