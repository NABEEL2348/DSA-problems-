#include<stdio.h>
#include<math.h>
#include<limits.h>
#include<string.h>
int maximumfallingsum(int arr[][3],int m,int n,int dp[m][n])
{
    if(m==0)
    {
        return arr[0][n];
    }
    if(n<0 || n>m)
    {
        return INT_MAX;
    }
    if(dp[m][n]!=-1)
    {
        return dp[m][n];
    }
    int side=arr[m][n]+maximumfallingsum(arr,m-1,n,dp);
    int leftside=arr[m][n]+maximumfallingsum(arr,m-1,n-1,dp);
    int rightside=arr[m][n]+maximumfallingsum(arr,m-1,n+1,dp);
    
    dp[m][n]=fmax(side,fmax(leftside,rightside));
    return dp[m][n];
  
}
int main()
{
    int arr[3][3]={{2,1,3},{6,5,4},{7,8,9}};
    int m=3;
    int n=3;
    int dp[m][n];
    memset(dp,-1,sizeof(dp));
    printf("%d",maximumfallingsum(arr,m-1,n-1,dp));
    
}