#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
struct node{
    int num;
    struct node *next;
};
int create(struct node **head,int num)
{
    struct node *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->num=num;
    newnode->next=NULL;
    if(*head==NULL)
    {
        *head=newnode;
    }
    else
    {
        struct node *tptr=*head;
        while(tptr->next!=NULL)
        {
            tptr=tptr->next;
        }
        tptr->next=newnode;
    }
}
int display(struct node *head)
{
    struct node *tptr=head;
    while(tptr!=NULL)
    {
        printf("%d ",tptr->num);
        tptr=tptr->next;
    }
}
bool iscyclic(struct node *head)
{
    struct node *slow=head->next;
    struct node *fast=head->next->next;
    while(slow!=NULL && fast->next!=NULL && fast!=NULL)
    {
        if(slow==fast)
        {
            return true;
        }
        slow=slow->next;
        fast=fast->next->next;
    }
    return false;
}
int main()
{
    struct node *head=NULL;
    create(&head,70);
    create(&head,80);
    create(&head,90);
    display(head);
    //70 80 90 70 80 90 is head 70 80 90 is head
    if(iscyclic(head))
    {
        printf("it is cyclic linked list");
    }
    else
    {
        printf("not a linkedlist");
    }
}
