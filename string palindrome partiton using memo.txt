#include<stdio.h>
#include<string.h>
#include<limits.h>
int reverse(char str[],int start,int end)
{
    while(start<=end)
    {
        if(str[start]!=str[end])
        {
            return 0;
        }
        start++;
        end--;
    }
    return 1;
}
int min(int a,int b)
{
    return(a<b)?a:b;
}
int mcmpalindromepartition(char str[],int i,int j,int dp[][100])
{
    if(i==j || reverse(str,i,j)) 
    {
        return 0;
    }
    if(dp[i][j]!=-1)
    {
        return dp[i][j];
    }
    int mini=INT_MAX;
    for(int k=i;k<j;k++)
    {
        int steps= 1 + mcmpalindromepartition(str,i,k,dp)+mcmpalindromepartition(str,k+ 1,j,dp);
        mini=min(mini,steps);
    }
    return dp[i][j]=mini;
    
}
int main()
{
    char str[]="abcbm";
    int n=strlen(str);
    int dp[100][100];
    memset(dp,-1,sizeof(dp));
    printf("%d ",mcmpalindromepartition(str,0,n - 1,dp));
}